## Project metadata and dependencies (PEP 621)
[project]
name = "idun-agent-manager"
version = "0.1.0"
description = "Modern FastAPI backend for managing AI agents with PostgreSQL, SQLAlchemy, and observability"
readme = "README.md"
license = { text = "MIT" }
authors = [ { name = "Idun Team", email = "team@idun.com" } ]
requires-python = ">=3.13,<3.14"

dependencies = [
  # FastAPI and server
  "fastapi>=0.115.0,<0.116.0",
  "uvicorn[standard]>=0.32.0,<0.33.0",
  "gunicorn>=23.0.0,<24.0.0",

  # Database and ORM
  "sqlalchemy[asyncio]>=2.0.36,<3.0.0",
  "alembic>=1.14.0,<2.0.0",
  "asyncpg>=0.30.0,<0.31.0",
  "psycopg2-binary>=2.9.10,<3.0.0",

  # Configuration and validation
  "pydantic[email]>=2.11.0,<3.0.0",
  "pydantic-settings>=2.7.0,<3.0.0",

  # Authentication and security
  "authlib>=1.3.2,<2.0.0",
  "python-jose[cryptography]>=3.3.0,<4.0.0",
  "passlib[bcrypt]>=1.7.4,<2.0.0",
  "python-multipart>=0.0.12,<0.1.0",

  # HTTP client
  "httpx>=0.28.1,<0.29.0",

  # Caching and queues
  "redis>=5.2.0,<6.0.0",
  "celery>=5.4.0,<6.0.0",

  # Performance and serialization
  "orjson>=3.10.12,<4.0.0",

  # Observability and logging
  "opentelemetry-api>=1.20.0,<2.0.0",
  "opentelemetry-sdk>=1.20.0,<2.0.0",
  "opentelemetry-instrumentation-fastapi>=0.41b0,<0.42.0",
  "opentelemetry-instrumentation-sqlalchemy>=0.41b0,<0.42.0",
  "opentelemetry-instrumentation-httpx>=0.41b0,<0.42.0",
  "opentelemetry-exporter-otlp>=1.20.0,<2.0.0",
  "structlog>=23.2.0,<24.0.0",

  # Utilities
  "python-dotenv>=1.0.1,<2.0.0",
  "tenacity>=9.0.0,<10.0.0",
]

## uv configuration
[tool.uv]
# Avoid installing the current project as a package during sync
package = false

[dependency-groups]
dev = [
  # Testing
  "pytest==8.3.4",
  "pytest-asyncio==0.25.0",
  "pytest-cov==6.0.0",
  "factory-boy==3.3.1",

  # Developer tools
  "ruff==0.8.4",
  "black==24.10.0",
  "mypy==1.14.0",
  "pre-commit==4.0.1",
  "ipdb",
  "ipython",

  # Type stubs
  "types-redis==4.6.0",
  "types-passlib==1.7.7",
]

[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py313"
line-length = 88
extend-exclude = ["migrations", "alembic"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 