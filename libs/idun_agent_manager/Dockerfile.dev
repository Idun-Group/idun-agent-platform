# Development Dockerfile with all tools and hot reload
FROM python:3.13-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    curl \
    git \
    vim \
    nano \
    htop \
    tree \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==1.8.3

# Configure Poetry for development
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Set work directory
WORKDIR /app

# Development stage
FROM base as development

# Copy Poetry files first for better caching
COPY pyproject.toml ./
COPY poetry.loc[k] ./

# Install ALL dependencies (including dev dependencies)
RUN poetry install --no-root && rm -rf $POETRY_CACHE_DIR

# Install additional development tools inside the container
RUN poetry run pip install ipdb ipython

# Copy application code
COPY src/ ./src/
COPY alembic.ini ./
COPY alembic/ ./alembic/
COPY tests/ ./tests/

# Create directories for development
RUN mkdir -p /app/logs /app/tmp

# Set proper permissions
RUN chmod +x /app/src

# Expose port
EXPOSE 8000

# Default command for development (can be overridden)
CMD ["poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"] 