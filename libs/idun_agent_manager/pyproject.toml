[tool.poetry]
name = "idun-agent-manager"
version = "0.1.0"
description = "Modern FastAPI backend for managing AI agents with PostgreSQL, SQLAlchemy, and observability"
authors = ["Idun Team <team@idun.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "app", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
# FastAPI and server
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
gunicorn = "^23.0.0"

# Database and ORM
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
alembic = "^1.14.0"
asyncpg = "^0.30.0"
psycopg2-binary = "^2.9.10"

# Configuration and validation
pydantic = {extras = ["email"], version = "^2.11.0"}
pydantic-settings = "^2.7.0"

# Authentication and security
authlib = "^1.3.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.12"

# HTTP client
httpx = "^0.28.1"

# Caching and queues
redis = "^5.2.0"
celery = "^5.4.0"

# Performance and serialization
orjson = "^3.10.12"

# Observability and logging
opentelemetry-api = "^1.20.0"
opentelemetry-sdk = "^1.20.0"
opentelemetry-instrumentation-fastapi = "^0.41b0"
opentelemetry-instrumentation-sqlalchemy = "^0.41b0"
opentelemetry-instrumentation-httpx = "^0.41b0"
opentelemetry-exporter-otlp = "^1.20.0"
structlog = "^23.2.0"

# Utilities
python-dotenv = "^1.0.1"
tenacity = "^9.0.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^8.3.4"
pytest-asyncio = "^0.25.0"
pytest-cov = "^6.0.0"
httpx = "^0.28.1"
factory-boy = "^3.3.1"

# Code quality
ruff = "^0.8.4"
black = "^24.10.0"
mypy = "^1.14.0"
pre-commit = "^4.0.1"

# Type stubs
types-redis = "^4.6.0"
types-passlib = "^1.7.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py313"
line-length = 88
extend-exclude = ["migrations", "alembic"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 