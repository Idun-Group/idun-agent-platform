[project]
name = "idun-agent-engine"
version = "0.1.0"
description = "Python SDK and runtime to serve AI agents with FastAPI, LangGraph, and observability."
authors = [{ name = "Geoffrey HARRAZI", email = "geoffreyharrazi@gmail.com" }]
requires-python = ">=3.13,<3.14"
readme = "README.md"
license = "MIT"
keywords = [
    "agents",
    "langgraph",
    "fastapi",
    "sdk",
    "llm",
    "observability",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
dependencies = [
    "fastapi>=0.116.1,<0.117.0",
    "uvicorn>=0.35.0,<0.36.0",
    "langgraph>=0.6.3,<0.7.0",
    "langgraph-checkpoint-sqlite>=2.0.11,<3.0.0",
    "streamlit>=1.47.1,<2.0.0",
    "httpx>=0.28.1,<0.29.0",
    "pydantic>=2.11.7,<3.0.0",
    "langchain-core>=0.3.72,<0.4.0",
    "langchain-google-vertexai>=2.0.27,<3.0.0",
    "google-adk>=1.9.0,<2.0.0",
    "ag-ui-protocol>=0.1.8,<0.2.0",
    "aiosqlite>=0.21.0,<0.22.0",
    "langfuse>=3.2.2,<4",
    "arize-phoenix-otel>=0.2.0,<1.0.0",
    "openinference-instrumentation-langchain>=0.1.13,<1.0.0",
    "langchain>=0.3.27,<0.4",
    "arize-phoenix>=11.22.0,<12",
    "haystack-ai>=2.17.1",
]

[project.urls]
Homepage = "https://github.com/geoffreyharrazi/idun-agent-platform"
Repository = "https://github.com/geoffreyharrazi/idun-agent-platform"
Documentation = "https://github.com/geoffreyharrazi/idun-agent-platform/tree/main/libs/idun_agent_engine"
Issues = "https://github.com/geoffreyharrazi/idun-agent-platform/issues"

[dependency-groups]
dev = [
    "ruff>=0.6.5,<0.13",
    "black>=24.8.0,<26",
    "pre-commit>=3.8.0,<5",
    "mypy>=1.10.0,<2",
    "pytest>=8.3.3,<9",
    "pytest-cov>=5.0.0,<7",
    "types-PyYAML>=6.0.12.20240808,<7",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/idun_agent_engine",
    "src/idun_agent_engine/py.typed",
]

[tool.hatch.build.targets.wheel]
include = [
    "src/idun_agent_engine",
    "src/idun_agent_engine/py.typed",
]

[tool.hatch.build.targets.wheel.sources]
"src/idun_agent_engine" = "idun_agent_engine"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ["py313"]
include = "\\.pyi?$"
exclude = '''
(
  /build/|
  /dist/|
  /.venv/|
  /.git/
)
'''

[tool.ruff]
target-version = "py313"
line-length = 88
extend-exclude = [
    "build",
    "dist",
    ".venv",
    "examples",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "D",   # pydocstyle (docstrings)
]
extend-ignore = [
    "E501",  # line length handled by black
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow re-exporting in package __init__

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true
strict_optional = true
no_implicit_optional = true
disallow_untyped_defs = false
check_untyped_defs = true
pretty = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true
